41. First Missing Positive
Hard


Given an unsorted integer array nums, return the smallest missing positive integer.

You must implement an algorithm that runs in O(n) time and uses constant extra space.

 

Example 1:

Input: nums = [1,2,0]
Output: 3
Example 2:

Input: nums = [3,4,-1,1]
Output: 2
Example 3:

Input: nums = [7,8,9,11,12]
Output: 1

#######################################################################################################

class Solution {
    public int firstMissingPositive(int[] nums) {
        int len = nums.length;
        Set<Integer> set = new HashSet<>();
        for(int i = 0; i < len; i++){
            if(!set.contains(nums[i]))
                set.add(nums[i]);
        }
        int count = 1;
        while(true){
            if(!set.contains(count))
                return count;
            count++;
        }
    }
}
